{
    "swagger": "2.0",
    "info": {
        "description": "API для управления документами",
        "title": "My Docs API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/auth": {
            "post": {
                "description": "Возвращает JWT при валидных логине и пароле.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "login, pswd",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.APIEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/auth.loginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            }
        },
        "/api/auth/{token}": {
            "delete": {
                "description": "Завершает сессию: помечает токен как отозванный до истечения exp.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout (revoke token)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token (raw)",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.APIEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/auth.logoutResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            }
        },
        "/api/docs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "List documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner login (optional)",
                        "name": "login",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter key (name|mime)",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter value",
                        "name": "value",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name|created",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.APIEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            },
            "post": {
                "description": "multipart: meta(json), json(optional), file(optional)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "Upload new document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JSON meta",
                        "name": "meta",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JSON body",
                        "name": "json",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.APIEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            }
        },
        "/api/docs/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "Get single document or file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "when file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "docs"
                ],
                "summary": "Delete document (owner only)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "document id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.APIEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "Регистрация нового пользователя (доступно только по admin-token из конфига).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "token, login, pswd",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.registerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/domain.APIEnvelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/auth.registerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.APIEnvelope"
                        }
                    }
                }
            }
        },
        "/v1/healthz": {
            "get": {
                "description": "Проверка, жив ли сервис (не зависит от БД)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Liveness probe",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/readyz": {
            "get": {
                "description": "Проверка готовности сервиса (включая пинг базы данных)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness probe",
                "responses": {
                    "200": {
                        "description": "ready",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.loginRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "pswd": {
                    "type": "string"
                }
            }
        },
        "auth.loginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.logoutResponse": {
            "type": "object",
            "properties": {
                "revoked": {
                    "description": "jti",
                    "type": "string"
                }
            }
        },
        "auth.registerRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "pswd": {
                    "type": "string"
                },
                "token": {
                    "description": "админ-токен (из конфига)",
                    "type": "string"
                }
            }
        },
        "auth.registerResponse": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                }
            }
        },
        "domain.APIEnvelope": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/domain.APIError"
                },
                "response": {}
            }
        },
        "domain.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}