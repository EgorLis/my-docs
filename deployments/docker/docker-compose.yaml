services:
  my-docs:
    build:
      context: ../..
      dockerfile: deployments/docker/Dockerfile
    env_file:
      - ../../.env.docker
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      # --- S3 ---
      - S3_ENDPOINT=${S3_ENDPOINT}         # minio:9000
      - S3_REGION=${S3_REGION}             # us-east-1
      - S3_BUCKET=${S3_BUCKET}             # mydocs
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_USE_SSL=${S3_USE_SSL}           # false
      - S3_PATH_STYLE=${S3_PATH_STYLE}     # true (для MinIO)
    ports:
      - "8001:8001"
    depends_on:
      - db
      - minio
      - minio-setup
      - redis
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

# --- S3 (MinIO) ---
  minio:
    image: minio/minio:latest
    command: server --address ":9000" --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network
    restart: unless-stopped

# Создание бакета (с ожиданием готовности MinIO)
  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_started
    entrypoint: >
     sh -c '
       echo "Waiting for MinIO...";
       # Ждём доступности API: пытаемся привязать alias с ретраями
       until mc alias set local http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY}; do
         echo "MinIO is not ready yet, retrying..."; sleep 2;
       done &&
       mc mb --ignore-existing local/${S3_BUCKET} &&
       mc anonymous set none local/${S3_BUCKET} &&
       echo "Bucket ${S3_BUCKET} ready"
     '
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"] # для локалки хватает
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
  redis_data:

networks:
  app-network:
    driver: bridge